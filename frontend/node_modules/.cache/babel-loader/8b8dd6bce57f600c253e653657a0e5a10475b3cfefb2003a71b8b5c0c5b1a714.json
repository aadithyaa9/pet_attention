{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aadit\\\\Desktop\\\\pet_attention\\\\frontend\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [pet, setPet] = useState(null);\n  const [newTask, setNewTask] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/api/pet\").then(res => setPet(res.data[0]));\n    axios.get(\"http://localhost:3000/api/tasks\").then(res => setTasks(res.data));\n  }, []);\n  const addTask = () => {\n    axios.post(\"http://localhost:3000/api/tasks\", {\n      task: newTask\n    }).then(res => {\n      setTasks([...tasks, res.data]);\n      setNewTask(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Focus Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), pet ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your Pet: \", pet.name, \" (\", pet.type, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No pet selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      onChange: e => setNewTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: t.task\n      }, t._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sP7GufT7DSV81b1FfGgFLR/Qx38=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","pet","setPet","newTask","setNewTask","get","then","res","data","addTask","post","task","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","value","onChange","e","target","onClick","map","t","_id","_c","$RefreshReg$"],"sources":["C:/Users/aadit/Desktop/pet_attention/frontend/src/app.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [pet, setPet] = useState(null);\n  const [newTask, setNewTask] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/api/pet\").then((res) => setPet(res.data[0]));\n    axios.get(\"http://localhost:3000/api/tasks\").then((res) => setTasks(res.data));\n  }, []);\n\n  const addTask = () => {\n    axios.post(\"http://localhost:3000/api/tasks\", { task: newTask }).then((res) => {\n      setTasks([...tasks, res.data]);\n      setNewTask(\"\");\n    });\n  };\n\n  return (\n    <div>\n      <h1>Focus Timer</h1>\n      {pet ? <h2>Your Pet: {pet.name} ({pet.type})</h2> : <p>No pet selected</p>}\n      <input value={newTask} onChange={(e) => setNewTask(e.target.value)} />\n      <button onClick={addTask}>Add Task</button>\n      <ul>{tasks.map((t) => <li key={t._id}>{t.task}</li>)}</ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdF,KAAK,CAACc,GAAG,CAAC,+BAA+B,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKL,MAAM,CAACK,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7EjB,KAAK,CAACc,GAAG,CAAC,iCAAiC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKP,QAAQ,CAACO,GAAG,CAACC,IAAI,CAAC,CAAC;EAChF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBlB,KAAK,CAACmB,IAAI,CAAC,iCAAiC,EAAE;MAAEC,IAAI,EAAER;IAAQ,CAAC,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAK;MAC7EP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,GAAG,CAACC,IAAI,CAAC,CAAC;MAC9BJ,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBf,GAAG,gBAAGL,OAAA;MAAAgB,QAAA,GAAI,YAAU,EAACX,GAAG,CAACgB,IAAI,EAAC,IAAE,EAAChB,GAAG,CAACiB,IAAI,EAAC,GAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAGpB,OAAA;MAAAgB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1EpB,OAAA;MAAOuB,KAAK,EAAEhB,OAAQ;MAACiB,QAAQ,EAAGC,CAAC,IAAKjB,UAAU,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEpB,OAAA;MAAQ2B,OAAO,EAAEd,OAAQ;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3CpB,OAAA;MAAAgB,QAAA,EAAKb,KAAK,CAACyB,GAAG,CAAEC,CAAC,iBAAK7B,OAAA;QAAAgB,QAAA,EAAiBa,CAAC,CAACd;MAAI,GAAdc,CAAC,CAACC,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}